{"ast":null,"code":"document.addEventListener('DOMContentLoaded', () => {\n  const form = document.getElementById('loginForm');\n  if (!form) return;\n  const errorEl = document.getElementById('error');\n  const submitBtn = document.getElementById('submitBtn');\n  const roleNote = document.getElementById('roleNote');\n  const updateRoleNote = () => {\n    var _form$role;\n    const role = ((_form$role = form.role) === null || _form$role === void 0 ? void 0 : _form$role.value) || 'user';\n    if (roleNote) roleNote.innerHTML = `Signing in as <strong>${role === 'admin' ? 'Admin' : 'User'}</strong>.`;\n  };\n  Array.from(form.role || []).forEach(r => r.addEventListener('change', updateRoleNote));\n  updateRoleNote();\n  form.addEventListener('submit', async ev => {\n    var _form$username, _form$password, _form$role2;\n    ev.preventDefault();\n    if (errorEl) errorEl.textContent = '';\n    if (submitBtn) submitBtn.disabled = true;\n    const payload = {\n      username: ((_form$username = form.username) === null || _form$username === void 0 ? void 0 : _form$username.value.trim()) || '',\n      password: ((_form$password = form.password) === null || _form$password === void 0 ? void 0 : _form$password.value) || '',\n      role: ((_form$role2 = form.role) === null || _form$role2 === void 0 ? void 0 : _form$role2.value) || 'user'\n    };\n    if (!payload.username || !payload.password) {\n      if (errorEl) errorEl.textContent = 'Username and password are required.';\n      if (submitBtn) submitBtn.disabled = false;\n      return;\n    }\n    try {\n      const res = await fetch('/api/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(payload)\n      });\n      if (!res.ok) {\n        const body = await res.json().catch(() => ({\n          message: 'Login failed'\n        }));\n        if (errorEl) errorEl.textContent = (body === null || body === void 0 ? void 0 : body.message) || 'Invalid credentials.';\n        if (submitBtn) submitBtn.disabled = false;\n        return;\n      }\n      const data = await res.json();\n      if (data.token) localStorage.setItem('authToken', data.token);\n      const dest = payload.role === 'admin' ? '/admin/dashboard' : '/user/dashboard';\n      window.location.href = data.redirect || dest;\n    } catch (err) {\n      if (errorEl) errorEl.textContent = 'Network error. Try again.';\n      if (submitBtn) submitBtn.disabled = false;\n      console.error(err);\n    }\n  });\n});","map":{"version":3,"names":["document","addEventListener","form","getElementById","errorEl","submitBtn","roleNote","updateRoleNote","_form$role","role","value","innerHTML","Array","from","forEach","r","ev","_form$username","_form$password","_form$role2","preventDefault","textContent","disabled","payload","username","trim","password","res","fetch","method","headers","body","JSON","stringify","ok","json","catch","message","data","token","localStorage","setItem","dest","window","location","href","redirect","err","console","error"],"sources":["C:/Users/User/Desktop/TAV/Unit/SWE40006/group_project/student-app/frontend/src/components/Login.js"],"sourcesContent":["document.addEventListener('DOMContentLoaded', () => {\r\n  const form = document.getElementById('loginForm');\r\n  if (!form) return;\r\n  const errorEl = document.getElementById('error');\r\n  const submitBtn = document.getElementById('submitBtn');\r\n  const roleNote = document.getElementById('roleNote');\r\n\r\n  const updateRoleNote = () => {\r\n    const role = form.role?.value || 'user';\r\n    if (roleNote) roleNote.innerHTML = `Signing in as <strong>${role === 'admin' ? 'Admin' : 'User'}</strong>.`;\r\n  };\r\n  Array.from(form.role || []).forEach(r => r.addEventListener('change', updateRoleNote));\r\n  updateRoleNote();\r\n\r\n  form.addEventListener('submit', async (ev) => {\r\n    ev.preventDefault();\r\n    if (errorEl) errorEl.textContent = '';\r\n    if (submitBtn) submitBtn.disabled = true;\r\n\r\n    const payload = {\r\n      username: form.username?.value.trim() || '',\r\n      password: form.password?.value || '',\r\n      role: form.role?.value || 'user'\r\n    };\r\n\r\n    if (!payload.username || !payload.password) {\r\n      if (errorEl) errorEl.textContent = 'Username and password are required.';\r\n      if (submitBtn) submitBtn.disabled = false;\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const res = await fetch('/api/login', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(payload)\r\n      });\r\n\r\n      if (!res.ok) {\r\n        const body = await res.json().catch(()=>({message:'Login failed'}));\r\n        if (errorEl) errorEl.textContent = body?.message || 'Invalid credentials.';\r\n        if (submitBtn) submitBtn.disabled = false;\r\n        return;\r\n      }\r\n\r\n      const data = await res.json();\r\n      if (data.token) localStorage.setItem('authToken', data.token);\r\n      const dest = (payload.role === 'admin') ? '/admin/dashboard' : '/user/dashboard';\r\n      window.location.href = data.redirect || dest;\r\n    } catch (err) {\r\n      if (errorEl) errorEl.textContent = 'Network error. Try again.';\r\n      if (submitBtn) submitBtn.disabled = false;\r\n      console.error(err);\r\n    }\r\n  });\r\n});"],"mappings":"AAAAA,QAAQ,CAACC,gBAAgB,CAAC,kBAAkB,EAAE,MAAM;EAClD,MAAMC,IAAI,GAAGF,QAAQ,CAACG,cAAc,CAAC,WAAW,CAAC;EACjD,IAAI,CAACD,IAAI,EAAE;EACX,MAAME,OAAO,GAAGJ,QAAQ,CAACG,cAAc,CAAC,OAAO,CAAC;EAChD,MAAME,SAAS,GAAGL,QAAQ,CAACG,cAAc,CAAC,WAAW,CAAC;EACtD,MAAMG,QAAQ,GAAGN,QAAQ,CAACG,cAAc,CAAC,UAAU,CAAC;EAEpD,MAAMI,cAAc,GAAGA,CAAA,KAAM;IAAA,IAAAC,UAAA;IAC3B,MAAMC,IAAI,GAAG,EAAAD,UAAA,GAAAN,IAAI,CAACO,IAAI,cAAAD,UAAA,uBAATA,UAAA,CAAWE,KAAK,KAAI,MAAM;IACvC,IAAIJ,QAAQ,EAAEA,QAAQ,CAACK,SAAS,GAAG,yBAAyBF,IAAI,KAAK,OAAO,GAAG,OAAO,GAAG,MAAM,YAAY;EAC7G,CAAC;EACDG,KAAK,CAACC,IAAI,CAACX,IAAI,CAACO,IAAI,IAAI,EAAE,CAAC,CAACK,OAAO,CAACC,CAAC,IAAIA,CAAC,CAACd,gBAAgB,CAAC,QAAQ,EAAEM,cAAc,CAAC,CAAC;EACtFA,cAAc,CAAC,CAAC;EAEhBL,IAAI,CAACD,gBAAgB,CAAC,QAAQ,EAAE,MAAOe,EAAE,IAAK;IAAA,IAAAC,cAAA,EAAAC,cAAA,EAAAC,WAAA;IAC5CH,EAAE,CAACI,cAAc,CAAC,CAAC;IACnB,IAAIhB,OAAO,EAAEA,OAAO,CAACiB,WAAW,GAAG,EAAE;IACrC,IAAIhB,SAAS,EAAEA,SAAS,CAACiB,QAAQ,GAAG,IAAI;IAExC,MAAMC,OAAO,GAAG;MACdC,QAAQ,EAAE,EAAAP,cAAA,GAAAf,IAAI,CAACsB,QAAQ,cAAAP,cAAA,uBAAbA,cAAA,CAAeP,KAAK,CAACe,IAAI,CAAC,CAAC,KAAI,EAAE;MAC3CC,QAAQ,EAAE,EAAAR,cAAA,GAAAhB,IAAI,CAACwB,QAAQ,cAAAR,cAAA,uBAAbA,cAAA,CAAeR,KAAK,KAAI,EAAE;MACpCD,IAAI,EAAE,EAAAU,WAAA,GAAAjB,IAAI,CAACO,IAAI,cAAAU,WAAA,uBAATA,WAAA,CAAWT,KAAK,KAAI;IAC5B,CAAC;IAED,IAAI,CAACa,OAAO,CAACC,QAAQ,IAAI,CAACD,OAAO,CAACG,QAAQ,EAAE;MAC1C,IAAItB,OAAO,EAAEA,OAAO,CAACiB,WAAW,GAAG,qCAAqC;MACxE,IAAIhB,SAAS,EAAEA,SAAS,CAACiB,QAAQ,GAAG,KAAK;MACzC;IACF;IAEA,IAAI;MACF,MAAMK,GAAG,GAAG,MAAMC,KAAK,CAAC,YAAY,EAAE;QACpCC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACV,OAAO;MAC9B,CAAC,CAAC;MAEF,IAAI,CAACI,GAAG,CAACO,EAAE,EAAE;QACX,MAAMH,IAAI,GAAG,MAAMJ,GAAG,CAACQ,IAAI,CAAC,CAAC,CAACC,KAAK,CAAC,OAAK;UAACC,OAAO,EAAC;QAAc,CAAC,CAAC,CAAC;QACnE,IAAIjC,OAAO,EAAEA,OAAO,CAACiB,WAAW,GAAG,CAAAU,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEM,OAAO,KAAI,sBAAsB;QAC1E,IAAIhC,SAAS,EAAEA,SAAS,CAACiB,QAAQ,GAAG,KAAK;QACzC;MACF;MAEA,MAAMgB,IAAI,GAAG,MAAMX,GAAG,CAACQ,IAAI,CAAC,CAAC;MAC7B,IAAIG,IAAI,CAACC,KAAK,EAAEC,YAAY,CAACC,OAAO,CAAC,WAAW,EAAEH,IAAI,CAACC,KAAK,CAAC;MAC7D,MAAMG,IAAI,GAAInB,OAAO,CAACd,IAAI,KAAK,OAAO,GAAI,kBAAkB,GAAG,iBAAiB;MAChFkC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAGP,IAAI,CAACQ,QAAQ,IAAIJ,IAAI;IAC9C,CAAC,CAAC,OAAOK,GAAG,EAAE;MACZ,IAAI3C,OAAO,EAAEA,OAAO,CAACiB,WAAW,GAAG,2BAA2B;MAC9D,IAAIhB,SAAS,EAAEA,SAAS,CAACiB,QAAQ,GAAG,KAAK;MACzC0B,OAAO,CAACC,KAAK,CAACF,GAAG,CAAC;IACpB;EACF,CAAC,CAAC;AACJ,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}