# Dockerfile for Frontend (Production)

# --- Stage 1: Build ---
# Use a Node.js image to build the static assets.
FROM node:18-alpine AS builder

# Set the working directory
WORKDIR /app


# This declares a build-time argument named REACT_APP_API_URL.
# We will pass a value to this from our Jenkinsfile.
ARG REACT_APP_API_URL


# This sets the build argument as an environment variable, making it
# accessible to the 'npm run build' script via process.env.
ENV REACT_APP_API_URL=$REACT_APP_API_URL


# Copy package files and install dependencies
COPY package*.json ./
RUN npm install

# Copy the rest of the source code
COPY . .

# Run the production build script. This script will now see the
# REACT_APP_API_URL environment variable and bake its value into the
# final static JavaScript files.
RUN npm run build


# --- Stage 2: Serve ---
# This stage does not need to know about the API URL. It just serves files.
# NO CHANGES ARE NEEDED IN THIS STAGE.
FROM nginx:1.25-alpine

# Copy the built assets from the 'builder' stage
COPY --from=builder /app/build /usr/share/nginx/html

# NGINX listens on port 80 by default
EXPOSE 80

# The default NGINX command will start the server. No CMD needed.